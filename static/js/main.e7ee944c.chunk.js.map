{"version":3,"sources":["components/PokedexTable/PokedexTable.js","components/PokedexFilterBar/PokedexFilterBar.js","components/PokedexDetails/PokedexDetails.js","helpers/filterPokemons.js","containers/PokedexContainer/actions.js","containers/PokedexContainer/actionTypes.js","containers/PokedexContainer/PokedexContainer.js","pages/HomePage/HomePage.js","containers/PokedexContainer/reducer.js","store/reducers.js","containers/PokedexContainer/sagas.js","store/sagas.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["PokedexTable","props","pokemons","onPokemonClick","loadMore","isDataLoading","listItems","map","pokemon","listOfTypes","types","type","className","key","name","id","onClick","src","sprite","charAt","toUpperCase","slice","disabled","PokedexFilterBar","possibleTypes","addTypeToFilter","removeTypeFromFilter","handleCheck","event","target","checked","value","checkBox","element","htmlFor","PokedexDetails","pokemonDetailedTable","stats","stat","base_stat","join","height","weight","totalMoves","filterPokemons","filteredByType","length","filter","some","t","includes","fetchData","limit","offset","payload","fetchPossibleTypes","mapDispatchToProps","actions","connect","state","pokedex","isLoading","useState","detailedPokemon","setDetailedPokemon","useEffect","filteredPokemons","HomePage","initialState","pokedexReducer","item","combineReducers","fetchDataSaga","watchFetchDataSaga","watchFetchPossibleTypes","pokedexSaga","put","call","axios","get","response","arrayOfUrls","data","results","all","obj","url","arrayOfPokemons","filteredArrayOfPokemons","moves","front_default","sprites","takeEvery","rootSaga","saga","createSagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","reducers","run","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e7ee944c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst PokedexTable = (props) => {\r\n  const { pokemons, onPokemonClick, loadMore, isDataLoading } = props;\r\n\r\n  const listItems = pokemons.map((pokemon) => {\r\n    const listOfTypes = pokemon.types.map((type) => {\r\n      return (\r\n        <span className=\"pokemon-type\" key={type.type.name}>\r\n          {type.type.name}\r\n        </span>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div\r\n        className=\"element\"\r\n        key={pokemon.id}\r\n        onClick={() => onPokemonClick(pokemon.id)}\r\n      >\r\n        <img className=\"pokemon-img\" src={pokemon.sprite}></img>\r\n        <p className=\"pokemon-name\">\r\n          {pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)}\r\n        </p>\r\n        <div className=\"pokemon-types\">{listOfTypes}</div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"pokedexTable\">\r\n      {listItems}\r\n      <button className=\"loadMore\" onClick={loadMore} disabled={isDataLoading}>\r\n        Load More\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokedexTable;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst PokedexFilterBar = (props) => {\r\n  const { possibleTypes, addTypeToFilter, removeTypeFromFilter } = props;\r\n\r\n  const handleCheck = (event) => {\r\n    if (event.target.checked) {\r\n      addTypeToFilter(event.target.value);\r\n    } else {\r\n      removeTypeFromFilter(event.target.value);\r\n    }\r\n  };\r\n\r\n  const checkBox = possibleTypes.map((element) => {\r\n    return (\r\n      <span key={element.name} className=\"input-wrapper\">\r\n        <input\r\n          type=\"checkbox\"\r\n          value={element.name}\r\n          onClick={handleCheck}\r\n          id={`check-${element.name}`}\r\n        ></input>\r\n        <label htmlFor={`check-${element.name}`}>{element.name}</label>\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"pokedex-filter\">\r\n      <h2>Filter pokemons by type:</h2>\r\n      <ul>{checkBox}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokedexFilterBar;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst PokedexDetails = (props) => {\r\n  const { pokemon } = props;\r\n\r\n  const types = pokemon.types.map((type) => type.type.name);\r\n\r\n  const pokemonDetailedTable = pokemon.stats.map((stat) => {\r\n    return (\r\n      <tr key={stat.stat.name}>\r\n        <td className=\"table-name\">{stat.stat.name}</td>\r\n        <td className=\"table-amount\">{stat.base_stat}</td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"pokedex-details-wrapper\">\r\n      <div className=\"pokedex-details\">\r\n        <img className=\"pokemon-details-img\" src={pokemon.sprite}></img>\r\n        <p className=\"pokemon-details-name\">\r\n          {pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)}\r\n        </p>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"table-name\">Type</td>\r\n              <td className=\"table-amount\">{types.join(\", \")}</td>\r\n            </tr>\r\n            {pokemonDetailedTable}\r\n            <tr>\r\n              <td className=\"table-name\">Height</td>\r\n              <td className=\"table-amount\">{pokemon.height}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"table-name\">Weight</td>\r\n              <td className=\"table-amount\">{pokemon.weight}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"table-name\">Total movers</td>\r\n              <td className=\"table-amount\">{pokemon.totalMoves}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokedexDetails;\r\n","const filterPokemons = (pokemons, filteredByType) => {\r\n  if (filteredByType.length === 0) {\r\n    return pokemons;\r\n  }\r\n  const filtered = pokemons.filter((pokemon) => {\r\n    const types = pokemon.types.map((type) => type.type.name);\r\n    return types.some((t) => filteredByType.includes(t));\r\n  });\r\n  return filtered;\r\n};\r\n\r\nexport default filterPokemons;\r\n","import {\r\n  FETCH_DATA,\r\n  FETCH_POSSIBLE_TYPES,\r\n  ADD_TYPE_TO_FILTER,\r\n  REMOVE_TYPE_FROM_FILTER,\r\n} from \"./actionTypes\";\r\n\r\nexport const fetchData = (limit, offset) => {\r\n  return {\r\n    type: FETCH_DATA,\r\n    payload: { limit, offset },\r\n  };\r\n};\r\n\r\nexport const fetchPossibleTypes = () => {\r\n  return {\r\n    type: FETCH_POSSIBLE_TYPES,\r\n  };\r\n};\r\n\r\nexport const addTypeToFilter = (type) => {\r\n  return {\r\n    type: ADD_TYPE_TO_FILTER,\r\n    payload: { type },\r\n  };\r\n};\r\n\r\nexport const removeTypeFromFilter = (type) => {\r\n  return {\r\n    type: REMOVE_TYPE_FROM_FILTER,\r\n    payload: { type },\r\n  };\r\n};\r\n","export const FETCH_DATA = \"FETCH_DATA\";\r\nexport const FETCH_DATA_IN_PROGRESS = \"FETCH_DATA_IN_PROGRESS\";\r\nexport const FETCH_DATA_SUCCESS = \"FETCH_DATA_SUCCESS\";\r\nexport const TEST = \"TEST\";\r\nexport const FETCH_POSSIBLE_TYPES = \"FETCH_POSSIBLE_TYPES\";\r\nexport const FETCH_POSSIBLE_TYPES_SUCCESS = \"FETCH_POSSIBLE_TYPES_SUCCESS\";\r\nexport const REMOVE_TYPE_FROM_FILTER = \"REMOVE_TYPE_FROM_FILTER\";\r\nexport const ADD_TYPE_TO_FILTER = \"ADD_TYPE_TO_FILTER\";\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./index.css\";\r\nimport {\r\n  PokedexTable,\r\n  PokedexFilterBar,\r\n  PokedexDetails,\r\n} from \"../../components\";\r\nimport filterPokemons from \"../../helpers/filterPokemons\";\r\nimport * as actions from \"./actions\";\r\n\r\nconst PokedexContainer = (props) => {\r\n  const {\r\n    fetchData,\r\n    fetchPossibleTypes,\r\n    addTypeToFilter,\r\n    removeTypeFromFilter,\r\n    pokemons,\r\n    limit,\r\n    offset,\r\n    possibleTypes,\r\n    filteredByType,\r\n    isDataLoading,\r\n  } = props;\r\n  const [detailedPokemon, setDetailedPokemon] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchData(limit, offset);\r\n    fetchPossibleTypes();\r\n  }, []);\r\n\r\n  const onPokemonClick = (id) => {\r\n    setDetailedPokemon(pokemons.filter((pokemon) => pokemon.id === id)[0]);\r\n  };\r\n\r\n  const loadMore = () => {\r\n    fetchData(limit, offset);\r\n  };\r\n\r\n  const filteredPokemons = filterPokemons(pokemons, filteredByType);\r\n\r\n  return (\r\n    <div className=\"pokedex\">\r\n      <h1>Pokedex</h1>\r\n      <PokedexFilterBar\r\n        possibleTypes={possibleTypes}\r\n        addTypeToFilter={addTypeToFilter}\r\n        removeTypeFromFilter={removeTypeFromFilter}\r\n      />\r\n      <div className=\"pokedex-main\">\r\n        {!!pokemons.length && (\r\n          <PokedexTable\r\n            pokemons={filteredPokemons}\r\n            onPokemonClick={onPokemonClick}\r\n            loadMore={loadMore}\r\n            isDataLoading={isDataLoading}\r\n          />\r\n        )}\r\n        {!!detailedPokemon && <PokedexDetails pokemon={detailedPokemon} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    pokemons: state.pokedex.pokemons,\r\n    filteredByType: state.pokedex.filteredByType,\r\n    limit: state.pokedex.limit,\r\n    offset: state.pokedex.offset,\r\n    possibleTypes: state.pokedex.possibleTypes,\r\n    isDataLoading: state.pokedex.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...actions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PokedexContainer);\r\n","import React from 'react';\r\n\r\nimport { PokedexContainer} from '../../containers';\r\n\r\nconst HomePage = () => <PokedexContainer />\r\n\r\nexport default HomePage","import {\r\n  FETCH_DATA_SUCCESS,\r\n  FETCH_DATA_IN_PROGRESS,\r\n  FETCH_POSSIBLE_TYPES_SUCCESS,\r\n  ADD_TYPE_TO_FILTER,\r\n  REMOVE_TYPE_FROM_FILTER,\r\n} from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  filteredByType: [],\r\n  pokemons: [],\r\n  possibleTypes: [],\r\n  offset: 0,\r\n  limit: 12,\r\n  isLoading: false,\r\n};\r\n\r\nconst pokedexReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_DATA_IN_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    }\r\n    case FETCH_DATA_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        pokemons: [...state.pokemons, ...payload.pokemons],\r\n        offset: payload.offset + payload.limit,\r\n        isLoading: false,\r\n      };\r\n    }\r\n    case FETCH_POSSIBLE_TYPES_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        possibleTypes: [...payload.possibleTypes],\r\n      };\r\n    }\r\n    case ADD_TYPE_TO_FILTER: {\r\n      return {\r\n        ...state,\r\n        filteredByType: [...state.filteredByType, payload.type],\r\n      };\r\n    }\r\n    case REMOVE_TYPE_FROM_FILTER: {\r\n      return {\r\n        ...state,\r\n        filteredByType: state.filteredByType.filter(\r\n          (item) => item !== payload.type\r\n        ),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default pokedexReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport pokedexReducer from '../containers/PokedexContainer/reducer'\r\n\r\nexport default combineReducers({\r\n  pokedex: pokedexReducer,\r\n});","import { all, put, call, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  FETCH_DATA,\r\n  FETCH_DATA_IN_PROGRESS,\r\n  FETCH_DATA_SUCCESS,\r\n  FETCH_POSSIBLE_TYPES,\r\n  FETCH_POSSIBLE_TYPES_SUCCESS,\r\n} from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nfunction* fetchDataSaga({ payload }) {\r\n  const { limit, offset } = payload;\r\n  yield put({ type: FETCH_DATA_IN_PROGRESS });\r\n  const response = yield call(\r\n    axios.get,\r\n    `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`\r\n  );\r\n  const arrayOfUrls = response.data.results;\r\n  const arrayOfPokemons = yield all(\r\n    arrayOfUrls.map((obj) => {\r\n      return call(axios.get, obj.url);\r\n    })\r\n  );\r\n  const filteredArrayOfPokemons = arrayOfPokemons.map((element) => {\r\n    const {\r\n      id,\r\n      name,\r\n      height,\r\n      moves,\r\n      stats,\r\n      types,\r\n      weight,\r\n      sprites: { front_default },\r\n    } = element.data;\r\n    return {\r\n      id,\r\n      name,\r\n      height,\r\n      totalMoves: moves.length,\r\n      stats,\r\n      types,\r\n      weight,\r\n      sprite: front_default,\r\n    };\r\n  });\r\n  yield put({\r\n    type: FETCH_DATA_SUCCESS,\r\n    payload: { pokemons: filteredArrayOfPokemons, offset, limit },\r\n  });\r\n}\r\n\r\nexport function* watchFetchDataSaga() {\r\n  yield takeEvery(FETCH_DATA, fetchDataSaga);\r\n}\r\n\r\nfunction* fetchPossibleTypes() {\r\n  const response = yield call(\r\n    axios.get,\r\n    \"https://pokeapi.co/api/v2/type?limit=999\"\r\n  );\r\n  const possibleTypes = response.data.results;\r\n  yield put({ type: FETCH_POSSIBLE_TYPES_SUCCESS, payload: { possibleTypes } });\r\n}\r\n\r\nexport function* watchFetchPossibleTypes() {\r\n  yield takeEvery(FETCH_POSSIBLE_TYPES, fetchPossibleTypes);\r\n}\r\n\r\nexport default function* pokedexSaga() {\r\n  yield all([watchFetchDataSaga(), watchFetchPossibleTypes()]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport pokedexSaga from '../containers/PokedexContainer/sagas'\r\n\r\nexport  function* rootSaga() {\r\n  yield all([\r\n    pokedexSaga(),\r\n  ])\r\n}","import { createStore, applyMiddleware, compose}  from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from './reducers';\r\nimport { rootSaga } from './sagas';\r\n\r\nconst saga = createSagaMiddleware()\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(saga));\r\n\r\nconst store = createStore( reducers, enhancer);\r\n\r\nsaga.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\nimport { Provider} from 'react-redux';\n\nimport { HomePage } from './pages';\nimport store from './store'\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <HomePage />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}